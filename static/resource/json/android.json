[
    {
        "user_id": "4309694831660711",
        "article_id": "7087566977203437575",
        "brief_content": "今天刚好入职字节一周，和大家聊下我最近的一些想法。 距离上一次更新已经过去了两月，公众号后台收到不少催更消息，有人问我还会不会继续更新。前一个月忙着面试，之后好好的休息了一段时间。",
        "comment_count": 72,
        "digg_count": 142,
        "collect_count": 132,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da34bb5dcedc475793a10c22c46cdec8~tplv-k3u1fbpfcp-watermark.image?",
        "title": "入职字节跳动，和下一步的计划",
        "view_count": 24668,
        "tag_ids": [
            6809641090145059000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "817692379985752",
        "article_id": "7099762078977622053",
        "brief_content": "是的，你没看错，现在就要带你适配 Android13，2022 的Google I/O 发布了 Android 13 beta 2 和 Android 13 Beta 1 国内厂商的设备支持列表",
        "comment_count": 8,
        "digg_count": 116,
        "collect_count": 101,
        "cover_image": "",
        "title": " Android 13 适配指南",
        "view_count": 16220,
        "tag_ids": [
            6809640400832168000,
            6809641090145059000,
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1926761614410669",
        "article_id": "7114225231845457956",
        "brief_content": "从 Target 28 到 最新的 Target 31 升级过程中遇到的问题、原理、解决方案及操作方式，希望能帮大家在升级 Target 中事半功倍。",
        "comment_count": 9,
        "digg_count": 105,
        "collect_count": 142,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e808a05475654e339a6ef26edc5fbdce~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Android Target 31 升级全攻略 —— 记阿里首个超级 App 的坎坷升级之路",
        "view_count": 6821,
        "tag_ids": [
            7006207997428892000,
            6809640430150353000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3562073407103511",
        "article_id": "7120888153363185695",
        "brief_content": "简介 本项目是一个学习类型的项目，主要是为了学习一些Android最新的思路和开发思想，工程按照模块化、组件化的开发思路进行开发，项目整体结构如下图。 项目代码整洁规范，结构清晰，使用Android最",
        "comment_count": 6,
        "digg_count": 13,
        "collect_count": 24,
        "cover_image": "",
        "title": "高仿京东Android App，集成React-Native热更功能",
        "view_count": 1628,
        "tag_ids": [
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "167543676602120",
        "article_id": "7113577700543397918",
        "brief_content": "持续创作，加速成长！这是我参与「掘金日新计划 · 6 月更文挑战」的第 6 天，点击查看活动详情。 最近，似乎有越来越多的术语提到了开发软件的新方法。我们很难跟上和理解这些新术语的含义，或者理解它们的",
        "comment_count": 0,
        "digg_count": 5,
        "collect_count": 8,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/663ce3b2aa5e44f38843dca5c7dd4503~tplv-k3u1fbpfcp-watermark.image?",
        "title": "什么是移动端 DevOps，为什么值得你关注？",
        "view_count": 1700,
        "tag_ids": [
            6926170622158438000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "4406498335138696",
        "article_id": "7113395533460275236",
        "brief_content": "之前在项目上做内存泄漏优化的时候有一个关于ViewPager+RecyclerView的内存泄漏，记录一下解决过程",
        "comment_count": 2,
        "digg_count": 7,
        "collect_count": 5,
        "cover_image": "",
        "title": "记一次ViewPager + RecyclerView的内存泄漏",
        "view_count": 1906,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "448256476988680",
        "article_id": "7066707540502904862",
        "brief_content": "对社区火热🔥的状态管理库（Provider、BLoC、GetX）做一个技术分析和对比。难易程度、可维护性、开发成本、性能都是我们需要考虑的因素，当然也要视团队和具体应用场景而定。",
        "comment_count": 15,
        "digg_count": 71,
        "collect_count": 40,
        "cover_image": "https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42d04483a7c846bea29316a0a27356d4~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter项目该如何选择状态管理？",
        "view_count": 4652,
        "tag_ids": [
            6809641090145059000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1556564197255975",
        "article_id": "7121217696594657293",
        "brief_content": "一、ANR概述 ANR(Application Not responding)是指应用程序未响应，Android系统对于一些事件需要在一定的时间范围内完成，如果超过预定时间能未能得到有效响应或者响应时",
        "comment_count": 8,
        "digg_count": 31,
        "collect_count": 19,
        "cover_image": "",
        "title": "探究ANR原理-是谁控制了ANR的触发时间",
        "view_count": 2902,
        "tag_ids": [
            6809640400832168000,
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "70787819648695",
        "article_id": "6998536748166807588",
        "brief_content": "以即时聊天为例，来讲述 Provider的综合应用，本篇是 Provider状态管理系列的终结篇，讲述了多种 Provider 的实现形式。",
        "comment_count": 2,
        "digg_count": 27,
        "collect_count": 3,
        "cover_image": "https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9663620a97734315894fca0dd4a97452~tplv-k3u1fbpfcp-watermark.image",
        "title": "Flutter 入门与实战（五十七）：两个模拟器来聊天 — Provider 综合应用",
        "view_count": 974,
        "tag_ids": [
            6809641090145059000,
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3615671881575853",
        "article_id": "7121643784638562317",
        "brief_content": "背景 看完本章，你将会学习到用ASM的tree api进行对匿名线程的hook操作，同时也能够了解到asm相关的操作和背景知识介绍！",
        "comment_count": 26,
        "digg_count": 52,
        "collect_count": 61,
        "cover_image": "",
        "title": "学完ASM Tree api，再也不怕hook了",
        "view_count": 4802,
        "tag_ids": [
            6809640400832168000,
            6809640862281105000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "193956140559304",
        "article_id": "7058539230288412679",
        "brief_content": "肝完这一篇，Flutter 更新机制的 99% 就都明白了，一句话就是能复用就复用，剩下的 1%，后面接着奏乐接着舞",
        "comment_count": 6,
        "digg_count": 4,
        "collect_count": 6,
        "cover_image": "https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b192a60cedcb4169b5381a04af38ae9f~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter 必知必会系列 —— Element 更新实战",
        "view_count": 1428,
        "tag_ids": [
            6809641090145059000,
            6809640380334604000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2770425030646920",
        "article_id": "7115781013170552840",
        "brief_content": "一、前情概要 目前，我在开发的一个 Android 项目需要各个功能做到线上动态化，其中，App 启动时显示的 Loading 模块，会优先检测加载远程的 Loading 模块，加载失败时，会使用 A",
        "comment_count": 5,
        "digg_count": 18,
        "collect_count": 3,
        "cover_image": "",
        "title": "Android - setVisibility() 失效，竟然是因为内存泄露",
        "view_count": 2835,
        "tag_ids": [
            6809640400832168000,
            6809641167680963000,
            6809640615584727000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3087084378135613",
        "article_id": "7121517604644061192",
        "brief_content": "App 开发中，等待多个并发结果的场景很多见。这一篇会介绍几种解决方案，并在真实的业务场景比较它们的优缺点。",
        "comment_count": 20,
        "digg_count": 62,
        "collect_count": 44,
        "cover_image": "",
        "title": "面试题 | 等待多个并发结果有哪几种方法？",
        "view_count": 3190,
        "tag_ids": [
            6809640615584727000,
            6809640404791591000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "497439504864984",
        "article_id": "7115334513206493215",
        "brief_content": "Flutter 多渠道多资源终极解决方案。 实操介绍Android 和 ios的多渠道多资源配置，并且绕开Flutter框架对ios多渠道的缺陷，实测能够完成打包上架。",
        "comment_count": 9,
        "digg_count": 30,
        "collect_count": 39,
        "cover_image": "",
        "title": "Flutter多渠道多资源配置终极解决方案，看这篇就够了",
        "view_count": 5324,
        "tag_ids": [
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "817692379985752",
        "article_id": "7124324287737462792",
        "brief_content": "Hello 大家好，我是 Flutter GDE 郭树煜，也是《Flutter 开发实战详解》的作者，掘金 id 恋猫de小郭，今天主要分享的内容是 - 普通技术人的弯道超车指南，也算是厚颜无耻地来分",
        "comment_count": 13,
        "digg_count": 47,
        "collect_count": 14,
        "cover_image": "",
        "title": "掘金 XDC 2022 - 普通技术人的弯道超车指南",
        "view_count": 1633,
        "tag_ids": [
            6809640482725954000,
            6809640400832168000,
            6809640399544517000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1820446987653816",
        "article_id": "7111986248603926541",
        "brief_content": "简介 Hilt 是什么？ 官方的定义是： 所以，Hilt是一个对Dagger库的扩展。那Hilt对于Dagger的优势主要在于Hilt与Jetpack库和Android Framework的类是集成在",
        "comment_count": 0,
        "digg_count": 9,
        "collect_count": 13,
        "cover_image": "https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e114aba2537477eb6bdd32cbb215afe~tplv-k3u1fbpfcp-watermark.image?",
        "title": "重学Android Jetpack(九)—Hilt基本使用",
        "view_count": 1253,
        "tag_ids": [
            6809640400832168000,
            6809641107346063000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3615671881575853",
        "article_id": "7128675991819386893",
        "brief_content": "本文将从例子角度出发，分析mmap的来龙去脉，内涵mmap中的使用细节与解析，就算是敢接触的新手，都可快速了解mmap背后的秘密",
        "comment_count": 2,
        "digg_count": 7,
        "collect_count": 6,
        "cover_image": "",
        "title": "关于mmap不为人知的秘密",
        "view_count": 2073,
        "tag_ids": [
            6809640400832168000,
            6809640447497994000,
            6809641107346063000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1398234518403838",
        "article_id": "7117810622133174309",
        "brief_content": "在涉及到一个包的安装过程的时候，往往都绕不开PackageManagerService，它是Android系统中最常用的服务之一。主要负责系统中Package的管理，应用程序的安装、卸载、信息查询等",
        "comment_count": 0,
        "digg_count": 3,
        "collect_count": 2,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/58c804f3f65c46e88522a6e27794c7d4~tplv-k3u1fbpfcp-watermark.image?",
        "title": "从APK安装过程来认识PMS",
        "view_count": 950,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3878732754325662",
        "article_id": "7124998036849164319",
        "brief_content": "今天喜提测试给的anr ， anr报错信息如下 。 看到这个 anr 报错信息 ，Input事件导致的anr ，感觉和窗口没有焦点有亿点关系。 ANR 复现 先弄个透明的activity，然后通过FL",
        "comment_count": 0,
        "digg_count": 7,
        "collect_count": 5,
        "cover_image": "",
        "title": "一个非耗时操作Input ANR引发的思考",
        "view_count": 554,
        "tag_ids": [
            6809640400832168000,
            6809641167680963000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "668101431009496",
        "article_id": "7131889789787176974",
        "brief_content": "1. `TransformAction`是什么? 2. 如何自定义`TransformAction`3. `TransformAction`在`AGP`中的应用",
        "comment_count": 5,
        "digg_count": 14,
        "collect_count": 16,
        "cover_image": "https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/896c87ffdcef425faa763d4a3d96ab78~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Transform 被废弃，TransformAction 了解一下~",
        "view_count": 1960,
        "tag_ids": [
            6809640400832168000,
            6809640519136707000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "817692379985752",
        "article_id": "7060686286712995853",
        "brief_content": "新春快乐，2022年新年Flutter推出了重大更新，Window在Flutter上终于支持正式版了。",
        "comment_count": 33,
        "digg_count": 158,
        "collect_count": 83,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b2e58c78f9d94f74a7ada909f1b4c0d7~tplv-k3u1fbpfcp-watermark.image?",
        "title": "2022 Flutter 宣布发布 Windows 正式版",
        "view_count": 45417,
        "tag_ids": [
            6809640407484334000,
            6809641090145059000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2392970477967453",
        "article_id": "7002778072348885000",
        "brief_content": "Rust是跨平台库的上使用较多的语言，Rust是否可以在逻辑层之上进一步服务于一些通用性的UI渲染？我们针对开源项目中几个核心工程进行剖析，并结合在Android系统的接入对此进行探索。",
        "comment_count": 10,
        "digg_count": 29,
        "collect_count": 12,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a00a5851c5d34089bb4867df4e6c7c04~tplv-k3u1fbpfcp-watermark.image",
        "title": "如何用Rust做Android UI渲染",
        "view_count": 5503,
        "tag_ids": [
            6809640400832168000,
            6809640495594078000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "369040747923261",
        "article_id": "7125615887784083469",
        "brief_content": "最近在项目中使用 RecyclerView + StaggeredGridLayoutManager 实现了一个瀑布流加载图片的需求，遇到一些问题并成功解决，在此记录一下。",
        "comment_count": 2,
        "digg_count": 8,
        "collect_count": 11,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2778a7dd568447bf8ac27735c86eb592~tplv-k3u1fbpfcp-watermark.image?",
        "title": "RecyclerView瀑布流踩坑与解决方案",
        "view_count": 374,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "615370768790158",
        "article_id": "7125633423879700487",
        "brief_content": "谁说知识无法变现？利用一个Android知识点，可以做一款App，甚至可以养活一个团队……唉，实习生又走了！",
        "comment_count": 2,
        "digg_count": 22,
        "collect_count": 15,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0bd635d6110540d38bea3eb768baa473~tplv-k3u1fbpfcp-watermark.image?",
        "title": "如何实现App消息的未读已知、撤回已存",
        "view_count": 630,
        "tag_ids": [
            6809640400832168000,
            6809640430150353000,
            6809640621406421000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "4142615541321928",
        "article_id": "7103410257740693511",
        "brief_content": "恰逢某电商618活动，前两天写了篇 《节约\"阳寿\"——某电商618活动自动化》，脚本这两天都有挂，偶尔没事就会优化下，但始终还是觉得有些美中不足。昨天下班路上，还想着重构下，随手列了下思路：",
        "comment_count": 13,
        "digg_count": 144,
        "collect_count": 130,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e9109704bc754819bb8245719cab5c09~tplv-k3u1fbpfcp-watermark.image?",
        "title": "破大防！这个开源库，竟能让APP日常任务自动化变得如此简单",
        "view_count": 12326,
        "tag_ids": [
            6809640448827589000,
            6809641119362580000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2151058018414808",
        "article_id": "7083063918402207758",
        "brief_content": "用 Compose 中的 Text + Canvas + 简单的想法 写了一个验证码， 代码有注释， 文章有讲解， 欢迎大家来学习 。",
        "comment_count": 3,
        "digg_count": 9,
        "collect_count": 7,
        "cover_image": "",
        "title": "Compose Text + Canvas 写个验证码",
        "view_count": 1147,
        "tag_ids": [
            6809641107346063000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2172290708539502",
        "article_id": "7009299995954249759",
        "brief_content": "我正在参加中秋创意投稿大赛，详情请看：中秋创意投稿大赛 实现方式 想实现月亮发光效果需要使用的Paint类的setMaskFilter()方法，传入BlurMaskFilter对象实现高斯模糊发光。 ",
        "comment_count": 1,
        "digg_count": 19,
        "collect_count": 4,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e65c6d9a55ae44e3b73a4c7ee449b5e2~tplv-k3u1fbpfcp-watermark.image?",
        "title": "实现月全食效果-android自定义控件",
        "view_count": 1072,
        "tag_ids": [
            6809640400832168000,
            6809640715828593000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "615370768790158",
        "article_id": "7126858938795950111",
        "brief_content": "Android开发工具的下载和安装，Android项目的文件结构，完成第一个HelloWorld程序。",
        "comment_count": 19,
        "digg_count": 6,
        "collect_count": 1,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a1251c93f47841339a31a1905f560d34~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Java转Android：第1天 HelloWorld",
        "view_count": 1170,
        "tag_ids": [
            6809640400832168000,
            6809640445233070000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "606586148237431",
        "article_id": "7127531093544140831",
        "brief_content": "DeepLink 服务支撑了新媒体投放以及 APP 内置更新的下载能力，为了保证服务稳定性和性能，除上述缓存策略外，还有其他策略来协同，比如 APP 发新版本时会进行 CDN 预热。",
        "comment_count": 0,
        "digg_count": 6,
        "collect_count": 9,
        "cover_image": "",
        "title": "DeepLink在转转的实践",
        "view_count": 765,
        "tag_ids": [
            7006207997428892000,
            6809640400832168000,
            6809640399544517000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2384195547303688",
        "article_id": "7115621556700577828",
        "brief_content": "EditText的进阶使用 EditText 是我们常用的输入框控件，平常我们只是使用它输入文本，这里记录一些它不太常见的操作和一些解决方案。 一、焦点的自动获取 如果一个页面内定义了EditText",
        "comment_count": 9,
        "digg_count": 29,
        "collect_count": 22,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2fa3eec8335c4331a899ae4e8895b396~tplv-k3u1fbpfcp-watermark.image?",
        "title": "重学Android-EditText的进阶操作",
        "view_count": 2475,
        "tag_ids": [
            6809640400832168000,
            6809640430150353000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3368559355370616",
        "article_id": "7113856207932096526",
        "brief_content": "过去几十年以来，硬件的性能每 18 个月翻一倍，但软件的进步却慢得多，声明式 UI 是在 UI 开发这个领域难得的一次革命性的飞跃",
        "comment_count": 0,
        "digg_count": 11,
        "collect_count": 8,
        "cover_image": "",
        "title": "给移动开发者的声明式 UI 入门手册",
        "view_count": 2478,
        "tag_ids": [
            6809640501776482000,
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "870468939434039",
        "article_id": "7118933842739593229",
        "brief_content": "Widget，又叫“微件”、“小部件”。小部件是放置在主屏幕（Launcher）上的Android应用程序的小工具或控件。",
        "comment_count": 0,
        "digg_count": 3,
        "collect_count": 3,
        "cover_image": "",
        "title": "RE: 从零开始的车载Android HMI（二） - Widget",
        "view_count": 574,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1768489241815070",
        "article_id": "7113703128733581342",
        "brief_content": "前言 随着公司业务的扩展，货拉拉用户端apk包的体积也不断变大，过去一年，用户端android组进行了大量的瘦身工作，取得了较为显著的成果。再使用常规方法，已经很难优化包体积了。 我们可以把一些使用频",
        "comment_count": 10,
        "digg_count": 65,
        "collect_count": 76,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9502532f643d42bcb8ee5c7a69bfd763~tplv-k3u1fbpfcp-watermark.image?",
        "title": "货拉拉 Android 动态资源管理系统原理与实践",
        "view_count": 4577,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "149189281194766",
        "article_id": "7124510001212686367",
        "brief_content": "我正在参加「创意开发 投稿大赛」详情请看：掘金创意开发大赛来了！ 1. 前言 上一篇 《桌面导航 NavigationRail》 中介绍了官方的桌面导航，但整体灵活性并不是太好，风格我也不是很喜欢。看",
        "comment_count": 9,
        "digg_count": 40,
        "collect_count": 19,
        "cover_image": "https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/814c8b8b8e1d4303b8a46b0cc209f686~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter 桌面探索 | 自定义可拖拽导航栏",
        "view_count": 6869,
        "tag_ids": [
            6809640400832168000,
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1407028359070766",
        "article_id": "7123407798322331662",
        "brief_content": "先反思一下你们为什么要用flutter去集成unity？可不可以不用fluter去集成？如果可以的话，先放弃，用原生去集成吧，本文也不用看了，因为fluter集成实在太坑了，太降低效率了！步步",
        "comment_count": 0,
        "digg_count": 9,
        "collect_count": 6,
        "cover_image": "",
        "title": "在Flutter中集成Unity踩坑",
        "view_count": 4839,
        "tag_ids": [
            6809640400832168000,
            6809641090145059000,
            6809640568071651000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "43636194286093",
        "article_id": "7112249333218541581",
        "brief_content": "Key用来干嘛 Flutter中的Key，一直都是作为一个可选参数在很多Widget中出现，那么它到底有什么用，它到底怎么用，本篇文章将带你从头到尾，好好理解下，Flutter中的Key。 我们首先来",
        "comment_count": 2,
        "digg_count": 16,
        "collect_count": 5,
        "cover_image": "",
        "title": "Flutter布局指南之谁动了我的Key",
        "view_count": 1676,
        "tag_ids": [
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "149189281194766",
        "article_id": "7124097837389840397",
        "brief_content": "我们都知道 BottomNavigationBar 是一个移动端非常常用的底部导航栏组件，可以用于点击处理激活菜单，并通过回调来处理界面的切换。 - - 但是在桌面端，由于一般是宽大于高，所以 Bot",
        "comment_count": 5,
        "digg_count": 35,
        "collect_count": 15,
        "cover_image": "https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11b41fe9933e453e928ae4c9e61733c4~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter 组件集录 | 桌面导航 NavigationRail",
        "view_count": 5050,
        "tag_ids": [
            6809640400832168000,
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3491704662136541",
        "article_id": "7113738206318690340",
        "brief_content": "📚 背景 从 Android12 开始，如果我们的 tagSdk >=31, 即以 Android 12 或更高版本为目标平台时，且包含使用 intent 过滤器的 activity、服务或广播接收器",
        "comment_count": 2,
        "digg_count": 12,
        "collect_count": 11,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/955469fa05b14c94ad503c29d774de0c~tplv-k3u1fbpfcp-watermark.image?",
        "title": "写了一个适配 Android12-exported 的小插件",
        "view_count": 1410,
        "tag_ids": [
            6809640400832168000,
            6809640519136707000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3931509309842872",
        "article_id": "7075602976819118117",
        "brief_content": "Jetpack 提倡单向数据流架构，ViewModel 对外暴露的接口如果不合理，将破坏数据流的单向流动。",
        "comment_count": 12,
        "digg_count": 39,
        "collect_count": 31,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54c6a9552ce642889948ccf33950b790~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Jetpack MVVM 七宗罪之六：ViewModel 接口暴露不合理",
        "view_count": 6150,
        "tag_ids": [
            6809640400832168000,
            6809641107346063000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "4064262871848558",
        "article_id": "7123872753463066637",
        "brief_content": "在Android中，有这么一个“内存刺客”，作为我们日常开发中经常接触的对象之一，却常常因为使用方式的不当，时不时地就给我们的内存来上一个背刺，甚至毫不留情地就给我们抛出个OOM，它，就是Bitmap",
        "comment_count": 10,
        "digg_count": 25,
        "collect_count": 20,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6aed03775a58445da40b0a10a73ef6ee~tplv-k3u1fbpfcp-watermark.image?",
        "title": "“雪糕刺客”你听说过，Bitmap这个“内存刺客”你也要小心(上)～",
        "view_count": 1696,
        "tag_ids": [
            6809641167680963000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1662097123187623",
        "article_id": "7119007162965164040",
        "brief_content": "先上最终效果 使用的组件 TabLayout ViewPager NestScrollView RecyclerView 主要实现 首先我们要自定义一个我 ScrollView 继承自 NestedS",
        "comment_count": 17,
        "digg_count": 23,
        "collect_count": 33,
        "cover_image": "",
        "title": "安卓实现掘金 APP 首页滑动吸顶效果",
        "view_count": 4065,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2718430739301272",
        "article_id": "7114863832954044446",
        "brief_content": "背景 我们的工程使用的AGP4.0.2，是去年升级的，目前最新版本是AGP7.2.1，已经落后官方5个大版本了 gradle升级是必然的，只是时候未到而已，同样在去年也进行了AGP7.0升级调研，由于",
        "comment_count": 12,
        "digg_count": 37,
        "collect_count": 37,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0c6144b17fa147ffb7ae87bcc319b19e~tplv-k3u1fbpfcp-watermark.image?",
        "title": "刚学会Transform，你告诉我就要被移除了",
        "view_count": 4914,
        "tag_ids": [
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "70787819648695",
        "article_id": "7013143496139735047",
        "brief_content": "GetX 广受欢迎，用了的人几乎都说好，那么它真的像大家说的那么好吗？我们从客观的角度来分析分析 GetX 的缺陷。",
        "comment_count": 25,
        "digg_count": 28,
        "collect_count": 16,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/980aab4d83b94e6caa65a36200e92829~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter 入门与实战（八十四）：GetX 真的那么香吗？",
        "view_count": 4560,
        "tag_ids": [
            6809641090145059000,
            6809640399544517000,
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "923245496518439",
        "article_id": "7113953940282015758",
        "brief_content": "“受益”于目前 Android 手机各类屏幕尺寸长短不定、宽高比例大小不一的现状，屏幕适配 依然是 Android 应用开发时绕不开的问题 我们在日常开发中使用得最多的尺寸单位应该是 dp 了，Goo",
        "comment_count": 26,
        "digg_count": 51,
        "collect_count": 71,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16b9c303404e49c7aa19977224874b3b~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Jetpack Compose 实现完美屏幕适配",
        "view_count": 5629,
        "tag_ids": [
            6809640400832168000,
            6809641107346063000,
            6809640684354535000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3615671881575853",
        "article_id": "7107958280097366030",
        "brief_content": "Android动态加载so的相关知识，从0到1实现so库的动态加载，相信能够在这里获取到你想要的知识",
        "comment_count": 8,
        "digg_count": 264,
        "collect_count": 173,
        "cover_image": "",
        "title": "Android动态加载so！这一篇就够了！",
        "view_count": 6775,
        "tag_ids": [
            6809640400832168000,
            6809640445233070000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2278633282479278",
        "article_id": "7120815750880690190",
        "brief_content": "为了提供更好的视觉效果 ，全屏现实和沉浸式显示在App的开发中很常见，本篇文章介绍如何通过官方的API来实现。",
        "comment_count": 0,
        "digg_count": 10,
        "collect_count": 18,
        "cover_image": "",
        "title": "Android 全屏显示和沉浸式显示",
        "view_count": 1207,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "8451825089896",
        "article_id": "7128301452937658404",
        "brief_content": "在DialogFragment的oncreate里面做 setStyle在onCreate里面设置才有效。 参考: # 全屏DialogFragment # Android中如何让DialogFrag",
        "comment_count": 0,
        "digg_count": 2,
        "collect_count": 1,
        "cover_image": "",
        "title": "全屏DialogFragment",
        "view_count": 416,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "497439504864984",
        "article_id": "7122475675910586382",
        "brief_content": "本文将通过巧妙的方式，以简单的成本实现Flutter的静态资源多渠道定制。通过脚本来简单的支持Flutter静态资源的定制化。",
        "comment_count": 3,
        "digg_count": 13,
        "collect_count": 5,
        "cover_image": "",
        "title": "极简的成本实现Flutter静态资源多渠道定制",
        "view_count": 566,
        "tag_ids": [
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "43636194286093",
        "article_id": "7098144503063642143",
        "brief_content": "熟悉我的朋友应该都知道，我好几年前写过一个「Flutter状态管理之路」系列，那个时候介绍的是Provider，这也是官方推荐的状态管理工具，但当时没有写完，因为写着写着，觉得有很多地方不尽人意，用着",
        "comment_count": 1,
        "digg_count": 17,
        "collect_count": 16,
        "cover_image": "",
        "title": "重走Flutter状态管理之路—Riverpod入门篇",
        "view_count": 1950,
        "tag_ids": [
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3615671881575853",
        "article_id": "7131333107696795678",
        "brief_content": "共享内存（shared memory）是最常见的ipc进程之间通讯的方式之一了，相比于Binder，它也能做到不败吗？",
        "comment_count": 4,
        "digg_count": 11,
        "collect_count": 6,
        "cover_image": "",
        "title": "神奇的共享内存",
        "view_count": 1709,
        "tag_ids": [
            6809640400832168000,
            6809640447497994000,
            6809640407484334000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "149189281194766",
        "article_id": "7125738805159542814",
        "brief_content": "携手创作，共同成长！这是我参与「掘金日新计划 · 8 月更文挑战」的第 1 天，点击查看活动详情 0. 前言 之前写过一篇 《[-NDK 导引篇 -] 在NDK开发之前你应知道的东西》 介绍了在进入 ",
        "comment_count": 4,
        "digg_count": 27,
        "collect_count": 20,
        "cover_image": "https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae32db9b04794718ae9b931222fa29f4~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Android NDK 开发 | CMake 使用手册 - 初见篇",
        "view_count": 3075,
        "tag_ids": [
            6809640400832168000,
            6809641226560602000,
            6809640447497994000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3702810891269693",
        "article_id": "7129170601238855694",
        "brief_content": "Flutter中如何独立绘制每一个像素点? 前提 前一阵我参照教程：GAMEBOY 仿真器 做了一个game boy模拟器，经过漫长的调试，终于成功的在电脑上运行了起来，但作为一个移动端开发者，我最终",
        "comment_count": 3,
        "digg_count": 10,
        "collect_count": 7,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ba8e40332204e9ba40ee27553035800~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter中如何独立绘制每一个像素点?",
        "view_count": 2705,
        "tag_ids": [
            6809641090145059000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2384195547303688",
        "article_id": "7125996361232678943",
        "brief_content": "场景如下：当我们启动一个 Activity 的时候，如果此页面的布局太过复杂，或者是一个很长的表单，此时加载布局，执行页面转场动画，等操作都是在主线程，可能会抢Cpu资源，导致主线程block住",
        "comment_count": 5,
        "digg_count": 22,
        "collect_count": 19,
        "cover_image": "https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/09081cf4b6a242d59def8211eec904ee~tplv-k3u1fbpfcp-watermark.image?",
        "title": "开箱即用-使用异步加载布局来优化页面启动速度的几种方案",
        "view_count": 1124,
        "tag_ids": [
            6809640400832168000,
            6809640430150353000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "2151115000646583",
        "article_id": "7122400024683626532",
        "brief_content": "Android原生自定义车牌输入法 附带两种实现思路以及源码 EasyVehicleKeyBoard",
        "comment_count": 3,
        "digg_count": 12,
        "collect_count": 14,
        "cover_image": "",
        "title": "Android原生自定义车牌输入法 附带两种实现思路以及源码 EasyVehicleKeyBoard",
        "view_count": 1009,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "3562073407103511",
        "article_id": "7132720318736515085",
        "brief_content": "一、Android 13 正式版发布 今天，没做任何预告，谷歌为Pixel用户（Pixel 4、4a、5、5a和6系列等）送出惊喜，Android 13首个稳定版正式推送。 随后，谷歌承诺包括三星、小",
        "comment_count": 4,
        "digg_count": 18,
        "collect_count": 10,
        "cover_image": "",
        "title": "Android 13 正式版发布",
        "view_count": 3598,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1169536101124814",
        "article_id": "7116790869054734344",
        "brief_content": "最近掘金签约活动整搞得热火朝天，索性摊开双手，翻开我那尘封许久笔记本，抱着试试看的态度，把几篇曾经自己用心整理的文章拉出来遛遛，万一能整杯咖啡，那也是意料之外的惊喜。OK，能力一般，水平有限，如有同行",
        "comment_count": 8,
        "digg_count": 18,
        "collect_count": 25,
        "cover_image": "https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a9478921dad546cd824a9c1e92ad5019~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Android OpenGL开发——图像绘制详解",
        "view_count": 1291,
        "tag_ids": [
            6809641065780347000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "4248168660474269",
        "article_id": "7122653268617986084",
        "brief_content": "前言 本来我想写个协程三部曲,但是查了下貌似协程x的api和协程基础讲的比较多了,但是实战讲的很少,或者讲实战也只是怎么用别人封装好的三方库对应的支持(retrofit,ViewModel,room等",
        "comment_count": 0,
        "digg_count": 6,
        "collect_count": 5,
        "cover_image": "",
        "title": "Kotlin协程在项目中的实际应用",
        "view_count": 613,
        "tag_ids": [
            6809640615584727000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "1116759544052360",
        "article_id": "7118644512351584287",
        "brief_content": "AOP的基本概念 什么是AOP AOP（Aspect Oriented Programming），面向切面编程，是OOP（面向对象编程）的延续。 在OOP思想中，我们会把问题划分为各个模块，如语音、表",
        "comment_count": 3,
        "digg_count": 3,
        "collect_count": 15,
        "cover_image": "",
        "title": "关于AOP在Android中应用的一些思考",
        "view_count": 1442,
        "tag_ids": [
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "817692379985752",
        "article_id": "7124064789763981326",
        "brief_content": "本篇将带你在 Flutter 上快速实现两个炫酷的动画特效，希望最后的效果可以惊艳到你，带你感受不一样的特效。",
        "comment_count": 29,
        "digg_count": 92,
        "collect_count": 32,
        "cover_image": "https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cba677bb4d3f409c8d6e35c090366cc9~tplv-k3u1fbpfcp-watermark.image?",
        "title": "如何利用 Flutter 实现炫酷的 3D 卡片和帅气的 360° 展示效果",
        "view_count": 8753,
        "tag_ids": [
            6809640407484334000,
            6809641090145059000,
            6809640400832168000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    },
    {
        "user_id": "448256476988680",
        "article_id": "7115674087682375717",
        "brief_content": "Flutter如何识别外接媒体设备，并且实现视频流渲染和拍照？ 官方插件外界纹理、platformView实践、webRtc，谁与争锋！",
        "comment_count": 4,
        "digg_count": 36,
        "collect_count": 11,
        "cover_image": "https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e12539b0761d405381aec23e515cd93a~tplv-k3u1fbpfcp-watermark.image?",
        "title": "Flutter 桌面端实践之识别外接媒体设备",
        "view_count": 5407,
        "tag_ids": [
            6809641090145059000,
            6809640618277470000
        ],
        "category_name": "Android",
        "category_id": "6809635626879549454",
        "category_url": "android"
    }
]